Resultados <- data.frame(Modelo,AIC,BIC)
library("urca")                                #Carrega Pacote URCA
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)                                  #Carrega o pacote PWT8.0
#Escolher o melhor modelo com base no menor AIC/BIC
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,rima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
Modelo <-c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120")
Resultados <- data.frame(Modelo,AIC,BIC)
arima020 <- arima(emprego, c(0,2,0))
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <- c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120")
Resultados <- data.frame(Modelo,AIC,BIC)
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como Série Temporal
plot(emprego, main="Pessoa Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhões",
xlab="Ano")                                      #Cria gráfico da Série Temporal
acf(emprego)                                          #Função de Autocorrelação
pacf(emprego)                                         ##Função de Autocorrelação Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #Regressão linear simples do emprego em relação ao tempo
reglinEMP                                             #Exibe os resultados da regressão linear
summary(reglinEMP)
plot(emprego)                                         #Gráfcio dos dados
abline(reglinEMP, col="Blue")                         #Insere a linha de regressão linear estimada
#Removendo Tendência
residuosEMP <- reglinEMP$residuals                    #Salva os resíduos no vetor residuosEMP
reglinEMPres <- lm(residuosEMP ~ Anos)                #Regressão linear dos resíduos em função do tempo
plot(residuosEMP,type="l")                            #Gráfico dos resíduos
abline(reglinEMPres, col="Blue")                      #Insere a linha de regressão linear dos resíduos
#Removendo Tendência por meio da diferença
pdemprego <- diff(EMPREGO)                                #Calcula a primeira diferença da série de dados
diferenca1 <- (data.frame(EMPREGO[2:18],pdemprego))       #Exibe a tabela da série original coma diferença <-
DIFERENCA <- ts(diferenca1, start = 1994, frequency = 1)  #Define serie temporal para a tabela diferenca1
plot(DIFERENCA, plot.type="single", col=c("Black","Green")) #Cria o grafico com as duas series
plot(pdemprego, type="l")                                   #Cria gr´pafico somente para a serie da diferença
#Teste Dick-Fuller Aumentado conferindo se a serie se tornou estacionaria
pdemprego1 <- diff(emprego)                                            #Calculando-se a primeira diferença
TesteDF_Emprego1_trend <- ur.df(pdemprego1, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego1_trend)
pdemprego2 <- diff(diff(emprego))                                      #Calculando-se a segunda diferença
TesteDF_Emprego2_trend <- ur.df(pdemprego2, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego2_trend)
#Estimando a série temporal
arima123 <- arima(emprego, c(1,2,3))
#ARMA
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima220 <- arima(emprego, c(2,2,0))
arima221 <- arima(emprego, c(2,2,1))
arima222 <- arima(emprego, c(2,2,2))
arima223 <- arima(emprego, c(2,2,3))
#MA
arima021 <- arima(emprego, c(0,2,1))
arima022 <- arima(emprego, c(0,2,2))
arima023 <- arima(emprego, c(0,2,3))
#AR
arima020 <- arima(emprego, c(0,2,0))
#Escolher o melhor modelo com base no menor AIC/BIC
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <- c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima0120")
Resultados <- data.frame(Modelo,AIC,BIC)
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima020)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <- c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima020")
Resultados <- data.frame(Modelo,AIC,BIC)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <- c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima020","arima021", "arima022",
"arima023","arima020")
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <- c("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima020")
Resultados <- data.frame(Modelo,AIC,BIC)
View(br)
View(diferenca1)
View(estimacoes)
View(ma1)
View(pwt8.0)
View(Resultados)
rm(list = ls())
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)                                  #Carrega o pacote PWT8.0
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoiníveis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (país) igual a "Brazil", selecionando as colunas cujas variáveis são "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÂMBIO)
colnames(br) <-  c("PIB","Emprego","Câmbio")   #Renomeia as colunas para PIB, Trabalho e Câmbio
#Separando as variáveis
PIB <- br$PIB[45:62]                    #Cria o vetor para variável PIB
EMPREGO <- br$Emprego[45:62]            #Cria o vetor para variável EMPREGO
CAMBIO <- br$Câmbio[45:62]              #Cria o vetor para variável CAMBIO
Anos <- seq(from=1994, to=2011, by=1)   #Cria um vetor para o tempo em anos de 1994 até 2011
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
install.packages("urca")
install.packages("urca")
library(readxl)                                #Carrega Pacote readxl
library(pwt8)                                  #Carrega o pacote PWT8.0
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoiníveis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (país) igual a "Brazil", selecionando as colunas cujas variáveis são "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÂMBIO)
colnames(br) <-  c("PIB","Emprego","Câmbio")   #Renomeia as colunas para PIB, Trabalho e Câmbio
#Separando as variáveis
PIB <- br$PIB[45:62]                    #Cria o vetor para variável PIB
EMPREGO <- br$Emprego[45:62]            #Cria o vetor para variável EMPREGO
CAMBIO <- br$Câmbio[45:62]              #Cria o vetor para variável CAMBIO
Anos <- seq(from=1994, to=2011, by=1)   #Cria um vetor para o tempo em anos de 1994 até 2011
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como Série Temporal
plot(emprego, main="Pessoa Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhões",
xlab="Ano")                                      #Cria gráfico da Série Temporal
acf(emprego)                                          #Função de Autocorrelação
pacf(emprego)                                         ##Função de Autocorrelação Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #Regressão linear simples do emprego em relação ao tempo
reglinEMP                                             #Exibe os resultados da regressão linear
summary(reglinEMP)
plot(emprego)                                         #Gráfcio dos dados
abline(reglinEMP, col="Blue")                         #Insere a linha de regressão linear estimada
residuosEMP <- reglinEMP$residuals                    #Salva os resíduos no vetor residuosEMP
reglinEMPres <- lm(residuosEMP ~ Anos)                #Regressão linear dos resíduos em função do tempo
plot(residuosEMP,type="l")                            #Gráfico dos resíduos
abline(reglinEMPres, col="Blue")                      #Insere a linha de regressão linear dos resíduos
pdemprego <- diff(EMPREGO)                                #Calcula a primeira diferença da série de dados
diferenca1 <- (data.frame(EMPREGO[2:18],pdemprego))       #Exibe a tabela da série original coma diferença <-
DIFERENCA <- ts(diferenca1, start = 1994, frequency = 1)  #Define serie temporal para a tabela diferenca1
plot(DIFERENCA, plot.type="single", col=c("Black","Green")) #Cria o grafico com as duas series
plot(pdemprego, type="l")                                   #Cria gr´pafico somente para a serie da diferença
pdemprego1 <- diff(emprego)                                            #Calculando-se a primeira diferença
TesteDF_Emprego1_trend <- ur.df(pdemprego1, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego1_trend)
pdemprego2 <- diff(diff(emprego))                                      #Calculando-se a segunda diferença
TesteDF_Emprego2_trend <- ur.df(pdemprego2, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego2_trend)
arima123 <- arima(emprego, c(1,2,3))
#ARMA
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima220
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoiníveis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))
colnames(br) <-  c("PIB","Emprego","Câmbio")
rm(list = ls())
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoiníveis no pacote
View(pwt8.0)
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))
colnames(br) <-  c("PIB","Emprego","Câmbio")
View(pwt8.0)
PIB <- br$PIB[45:62]                    #Cria o vetor para variável PIB
EMPREGO <- br$Emprego[45:62]            #Cria o vetor para variável EMPREGO
CAMBIO <- br$Câmbio[45:62]              #Cria o vetor para variável CAMBIO
Anos <- seq(from=1994, to=2011, by=1)
View(br)
View(br)
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como Série Temporal
plot(emprego, main="Pessoa Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhões",
xlab="Ano")
acf(emprego)                                          #Função de Autocorrelação
pacf(emprego)                                         ##Função de Autocorrelação Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #Regressão linear simples do emprego em relação ao tempo
reglinEMP                                             #Exibe os resultados da regressão linear
summary(reglinEMP)
plot(emprego)                                         #Gráfcio dos dados
abline(reglinEMP, col="Blue")
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como Série Temporal
plot(emprego, main="Pessoas Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhões",
xlab="Ano")
acf(emprego)                                          #Função de Autocorrelação
pacf(emprego)                                         ##Função de Autocorrelação Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #Regressão linear simples do emprego em relação ao tempo
reglinEMP                                             #Exibe os resultados da regressão linear
summary(reglinEMP)
plot(emprego)                                         #Gráfcio dos dados
abline(reglinEMP, col="Blue")                         #Insere a linha de regressão linear estimada
residuosEMP <- reglinEMP$residuals                    #Salva os resíduos no vetor residuosEMP
reglinEMPres <- lm(residuosEMP ~ Anos)                #Regressão linear dos resíduos em função do tempo
plot(residuosEMP,type="l")                            #Gráfico dos resíduos
abline(reglinEMPres, col="Blue")                      #Insere a linha de regressão linear dos resíduos
pdemprego <- diff(EMPREGO)                                #Calcula a primeira diferença da série de dados
diferenca1 <- (data.frame(EMPREGO[2:18],pdemprego))       #Exibe a tabela da série original coma diferença <-
DIFERENCA <- ts(diferenca1, start = 1994, frequency = 1)  #Define serie temporal para a tabela diferenca1
plot(DIFERENCA, plot.type="single", col=c("Black","Green")) #Cria o grafico com as duas series
plot(pdemprego, type="l")
pdemprego1 <- diff(emprego)                                            #Calculando-se a primeira diferença
TesteDF_Emprego1_trend <- ur.df(pdemprego1, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego1_trend)
pdemprego2 <- diff(diff(emprego))                                      #Calculando-se a segunda diferença
TesteDF_Emprego2_trend <- ur.df(pdemprego2, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego2_trend)
arima123 <- arima(emprego, c(1,2,3))
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima220<- arima(emprego, c(2,2,0))
arima221<- arima(emprego, c(2,2,1))
arima222<- arima(emprego, c(2,2,2))
arima223<- arima(emprego, c(2,2,3))
arima021<- arima(emprego, c(0,2,1))
arima022<- arima(emprego, c(0,2,2))
arima023<- arima(emprego, c(0,2,3))
arima0120<- arima(emprego, c(0,1,2,0))
#AR
arima120
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,rima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima0120)
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <-c(list("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima120"))
Resultados <- data.frame(Modelo,AIC,BIC)
Modelo <-c(list("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima120"))
Resultados <- data.frame(Modelo,AIC,BIC)
#Aula 12 - Modelos  ARIMA
library("urca")                                #Carrega Pacote URCA
library(readxl)                                #Carrega Pacote readxl
library(pwt8)                                  #Carrega o pacote PWT8.0
data("pwt8.0")                                 #Carrega os dados elencados "pwt8.0" dispoiníveis no pacote
View(pwt8.0)                                   #Visualiza os dados na tabela pwt8.0
br <- subset(pwt8.0, country=="Brazil",
select = c("rgdpna","emp","xr"))  #Cria a tabela "br" com dados das linhas que assumem o valor "country" (país) igual a "Brazil", selecionando as colunas cujas variáveis são "rgdpna" (PIB), "avh" (TRABALHO)  e "xr" (CÂMBIO)
colnames(br) <-  c("PIB","Emprego","Câmbio")   #Renomeia as colunas para PIB, Trabalho e Câmbio
#Separando as variáveis
PIB <- br$PIB[45:62]                    #Cria o vetor para variável PIB
EMPREGO <- br$Emprego[45:62]            #Cria o vetor para variável EMPREGO
CAMBIO <- br$Câmbio[45:62]              #Cria o vetor para variável CAMBIO
Anos <- seq(from=1994, to=2011, by=1)   #Cria um vetor para o tempo em anos de 1994 até 2011
#Analise para o Emprego
plot(EMPREGO, type = "l")                            #Cria gráfico para o PIB
emprego <- ts(EMPREGO, start = 1994, frequency = 1)  #Define como Série Temporal
plot(emprego, main="Pessoas Empregadas no Brasil",
ylab="Qte de Pessoas Empregadas-milhões",
xlab="Ano")                                      #Cria gráfico da Série Temporal
acf(emprego)                                          #Função de Autocorrelação
pacf(emprego)                                         ##Função de Autocorrelação Parcial
reglinEMP <- lm(EMPREGO ~ Anos)                       #Regressão linear simples do emprego em relação ao tempo
reglinEMP                                             #Exibe os resultados da regressão linear
summary(reglinEMP)
plot(emprego)                                         #Gráfcio dos dados
abline(reglinEMP, col="Blue")                         #Insere a linha de regressão linear estimada
#Removendo Tendência
residuosEMP <- reglinEMP$residuals                    #Salva os resíduos no vetor residuosEMP
reglinEMPres <- lm(residuosEMP ~ Anos)                #Regressão linear dos resíduos em função do tempo
plot(residuosEMP,type="l")                            #Gráfico dos resíduos
abline(reglinEMPres, col="Blue")                      #Insere a linha de regressão linear dos resíduos
#Removendo Tendência por meio da diferença
pdemprego <- diff(EMPREGO)                                #Calcula a primeira diferença da série de dados
diferenca1 <- (data.frame(EMPREGO[2:18],pdemprego))       #Exibe a tabela da série original coma diferença <-
DIFERENCA <- ts(diferenca1, start = 1994, frequency = 1)  #Define serie temporal para a tabela diferenca1
plot(DIFERENCA, plot.type="single", col=c("Black","Green")) #Cria o grafico com as duas series
plot(pdemprego, type="l")                                   #Cria gr´pafico somente para a serie da diferença
#Teste Dick-Fuller Aumentado conferindo se a serie se tornou estacionaria
pdemprego1 <- diff(emprego)                                            #Calculando-se a primeira diferença
TesteDF_Emprego1_trend <- ur.df(pdemprego1, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego1_trend)
pdemprego2 <- diff(diff(emprego))                                      #Calculando-se a segunda diferença
TesteDF_Emprego2_trend <- ur.df(pdemprego2, "trend", lags = 1)         #Teste DF-DickFuller com drift e com tendencia
summary(TesteDF_Emprego2_trend)
#Estimando a série temporal
arima123 <- arima(emprego, c(1,2,3))
#ARMA
arima120 <- arima(emprego, c(1,2,0))
arima121 <- arima(emprego, c(1,2,1))
arima122 <- arima(emprego, c(1,2,2))
arima220<- arima(emprego, c(2,2,0))
arima221<- arima(emprego, c(2,2,1))
arima222<- arima(emprego, c(2,2,2))
arima223<- arima(emprego, c(2,2,3))
#MA
arima021<- arima(emprego, c(0,2,1))
arima022<- arima(emprego, c(0,2,2))
arima023<- arima(emprego, c(0,2,3))
#AR
arima120
#Escolher o melhor modelo com base no menor AIC/BIC
estimacoes <- list(arima123,arima120,arima121,
arima122,arima220,arima221,
arima222,arima223,arima021,arima021, arima022,
arima023,arima120)
AIC <- sapply(estimacoes, AIC)
BIC <- sapply(estimacoes, BIC)
Modelo <-c(list("arima123","arima120","arima121",
"arima122","arima220","arima221",
"arima222","arima223","arima021","arima021", "arima022",
"arima023","arima120"))
Resultados <- data.frame(Modelo,AIC,BIC)
#Análise para o Câmbio
#Análise para o PIB
install.packages("forecast")
install.packages("strucchange")
library(strucchange)
library(readxl)
library(readxl)
BITCOIN <- read_excel("C:/Econometria/Bitcoin.xlsx")
Hype <- ts <- ts(BITCOIN$Fechar, start = 2017, frequency = 365)
plot(Hype)
chow <- Fstats(Hype~1)    #Executa o Teste de F de Chow
sctest(chow)                 #Retorna a Estatística de Teste e o p-valor
plot(Hype)
lines(breakpoints(chow))
plot(chow)
chow <- Fstats(Hype~1)    #Executa o Teste de F de Chow
sctest(chow)                 #Retorna a Estatística de Teste e o p-valor
BITCOIN <- read_excel("C:/Econometria/Bitcoin.xlsx")
Hype <- ts <- ts(BITCOIN$Fechar, start = 2017, frequency = 365)
plot(Hype)
plot(Hype)
lines(bp_ts)            #Gráfico com os breakpoints
#Gráfico com as linhas de tendências para os três períodos
fm0 <- lm(Hype ~ 1)
fm1 <- lm(Hype ~ breakfactor(bp_ts, breaks = 1))
fm2 <- lm(Hype ~ breakfactor(bp_ts, breaks = 2))
plot(Hype)
lines(ts(fitted(fm0), start = 2017, freq=365), col = 3)
lines(ts(fitted(fm1), start = 2017, frequency=365), col = 4)
lines(ts(fitted(fm2), start = 2017, frequency=365), col = 1)
lines(bp_ts)
MIO1 <- diff(Hype)
plot(MIO1)
#É estacionária?
rm(list=ls())
setwd("C:/Econometria/16-Metodologia_Box-Jenkings-master")
remove.packages("readxl")
install.packages("readxl", dependencies = T)
remove.packages("aTSA")
install.packages("aTSA", dependencies = T)
remove.packages("tseries")
install.packages("tseries", dependencies = T)
library(readxl)
library(aTSA)
library(tseries)
library("urca")
library(readxl)
Bitcoin <- read_excel("Bitcoin.xlsx")
View(Bitcoin)
BITCOIN <- na.omit(read_excel("C:/Econometria/16-Metodologia_Box-Jenkings-master/Bitcoin.xlsx"))
Bitcoin <-  ts(log(BITCOIN$Close), start = 2014, frequency = 365)
BITCOIN <- na.omit(read_excel("C:/Econometria/16-Metodologia_Box-Jenkings-master/Bitcoin.xlsx"))
Bitcoin <-  ts(log(BITCOIN$Close), start = 2014, frequency = 365)
BITCOIN <- na.omit(read_excel("C:/Econometria/16-Metodologia_Box-Jenkings-master/Bitcoin.xlsx"))
Bitcoin <-  ts(log(BITCOIN$Close), start = 2017, frequency = 365)
BITCOIN <- na.omit(read_excel("C:/Econometria/16-Metodologia_Box-Jenkings-master/Bitcoin.xlsx"))
Bitcoin <-  ts(log(BITCOIN$Close), start = 2017, frequency = 365)
plot(Bitcoin, type="l", main="Logaritmos do Preço do Bitcoin", ylab="Log Preço", xlab="Data", col="Blue")
BITCOIN <- na.omit(read_excel("C:/Econometria/16-Metodologia_Box-Jenkings-master/Bitcoin.xlsx"))
Bitcoin <-  ts(log(BITCOIN$Close), start = 2017, frequency = 365)
plot(Bitcoin, type="l", main="Logaritmos do Preço do Bitcoin", ylab="Log Preço", xlab="Data", col="Blue")
grid(col = "black", lty = "dotted")
acf(log(BITCOIN$Close),lend=2, lwd=5,col="darkblue",main= "Função Autocorrelação - FAC")              #Melhorando aspecto da FAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
pacf(log(BITCOIN$Close),lend=60, lwd=5,col="darkblue",main= "Função Autocorrelação Parcial - FACP")   #Melhorando aspecto da PAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
#Teste ADF
summary(ur.df(Bitcoin, "none", lags = 1))
#Teste Philips-Perron
pp.test(Bitcoin)
#Teste KPSS
kpss.test(Bitcoin)
#Teste KPSS
kpss.test(Bitcoin)
#Teste Philips-Perron
pp.test(Bitcoin)
#Teste KPSS
kpss.test(Bitcoin)
IntOrdem1 <- diff(log(BITCOIN$Close))
IntegradaOrdem1 <- ts(IntOrdem1, start = 2014, frequency = 365)
plot(IntegradaOrdem1, type="l", main="Primeira Diferança dos Logs do Bitcoin - LogReturn", ylab="Log Preço", xlab="Data", col="Blue")
IntegradaOrdem1 <- ts(IntOrdem1, start = 2017, frequency = 365)
plot(IntegradaOrdem1, type="l", main="Primeira Diferança dos Logs do Bitcoin - LogReturn", ylab="Log Preço", xlab="Data", col="Blue")
grid(col = "black", lty = "dotted")
acf(IntOrdem1,lend=2, lwd=5,col="darkblue",main= "Função Autocorrelação - FAC")              #Melhorando aspecto da FAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
pacf(IntOrdem1,lend=60, lwd=5,col="darkblue",main= "Função Autocorrelação Parcial - FACP")   #Melhorando aspecto da PAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
#Teste ADF
ur.df(IntegradaOrdem1, "none", lags = 1)
#Teste Philips-Perron
pp.test(IntegradaOrdem1)
#Teste KPSS
kpss.test(IntegradaOrdem1)
#Estimando Regressões e Tabelando Resultados
AR1 <- arima(IntegradaOrdem1, order = c(1,1,0))   #Estima o AR1 e salva os resultados como AR1
AR2 <- arima(IntegradaOrdem1, order = c(2,1,0))   #Estima o AR2 e salva os resultados como AR2
AR3 <- arima(IntegradaOrdem1, order = c(3,1,0))   #Estima o AR3 e salva os resultados como AR3
AR4 <- arima(IntegradaOrdem1, order = c(4,1,0))
AR5 <- arima(IntegradaOrdem1, order = c(5,1,0))
AR6 <- arima(IntegradaOrdem1, order = c(6,1,0))
AR7 <- arima(IntegradaOrdem1, order = c(7,1,0))
AR8 <- arima(IntegradaOrdem1, order = c(8,1,0))
AR9 <- arima(IntegradaOrdem1, order = c(9,1,0))
AR10 <- arima(IntegradaOrdem1, order = c(10,1,0))
AR11<- arima(IntegradaOrdem1, order = c(11,1,0))
AR12 <- arima(IntegradaOrdem1, order = c(12,1,0))
AR13 <- arima(IntegradaOrdem1, order = c(13,1,0))
AR14 <- arima(IntegradaOrdem1, order = c(14,1,0))
AR15 <- arima(IntegradaOrdem1, order = c(15,1,0))
AR16 <- arima(IntegradaOrdem1, order = c(16,1,0))
AR17 <- arima(IntegradaOrdem1, order = c(17,1,0))
AR18 <- arima(IntegradaOrdem1, order = c(18,1,0))
AR19 <- arima(IntegradaOrdem1, order = c(19,1,0))
AR20 <- arima(IntegradaOrdem1, order = c(20,1,0))
AR21 <- arima(IntegradaOrdem1, order = c(21,1,0))
estimacoes <- list(AR1, AR2,AR3,AR4,AR5,
AR6,AR7,AR8,AR9,AR10,
AR11,AR12,AR13,AR14,AR15,
AR16,AR17,AR18,AR19,AR20,AR21)      #Cria uma lista com os estimadores
sapply(estimacoes, AIC)                 #Aplica o comando AIC na lista
sapply(estimacoes, BIC)                 #Aplica o comando BIC na lista
AIC <- sapply(estimacoes, AIC)      #Cria Coluna com resultados AIC
BIC <- sapply(estimacoes, BIC)      #Cria Coluna com resultados BIC
Modelo <- c("AR1", "AR2","AR3","AR4","AR5",
"AR6","AR7","AR8","AR9","AR10",
"AR11","AR12","AR13","AR14","AR15",
"AR16","AR17","AR18","AR19","AR20","AR21")   #cria coluna com nome dos modelos
Resultados <- data.frame(Modelo, AIC, BIC)  #Junta as três colunas acima num único resultado
View(Resultados)
AR1 <- arima(IntegradaOrdem1, order = c(1,1,0))
MA1 <- arima(IntegradaOrdem1, order = c(0,1,1))
AR1
predict(AR1,15)
library(forecast)
forecast(AR1,15)
plot(forecast(AR1,5), type="o", xlim=c(2018.75,2018.85), ylim=c(-0.03,0.06))
grid(col = "black", lty = "dotted")
arch.test(AR1)
residuos <- AR1$residuals
plot(residuos, type="o", main="Residuos do AR1")
grid(col = "black", lty = "dotted")
acf(residuos,lend=2, lwd=5,col="darkblue",main= "Função Autocorrelação - FAC")              #Melhorando aspecto da FAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
pacf(residuos,lend=60, lwd=5,col="darkblue",main= "Função Autocorrelação Parcial - FACP")   #Melhorando aspecto da PAC
axis(1,tck = 1, col = "lightgrey", lty = "dotted")
GARCH202=garch(residuos,c(20,2),trace=F)
plot(forecast(AR1,5), type="o", xlim=c(2018.75,2018.85), ylim=c(-0.03,0.06))
plot(forecast(AR1,5), type="o", xlim=c(2018.15,2018.85), ylim=c(-0.03,0.06))
plot(forecast(AR1,5), type="o", xlim=c(2018.75,2018.85), ylim=c(-0.03,0.06))
plot(forecast(AR1,5), type="o", xlim=c(2018.75,2018.85), ylim=c(-0.03,0.06))
grid(col = "black", lty = "dotted")
arch.test(AR1)
plot(forecast(AR1,5), type="o", xlim=c(2018.75,2018.85), ylim=c(-0.03,0.06))
grid(col = "black", lty = "dotted")
